module software.amazon.ionxtext.GenerateIon

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {

    component = XtextGenerator {
        configuration = {
            project = StandardProjectConfig {
                baseName = "software.amazon.ionxtext"
                rootPath = rootPath
                runtimeTest = {
                    enabled = true
                }
                eclipsePlugin = {
                    enabled = true
                }
                eclipsePluginTest = {
                    enabled = true
                }
                web = {
                    enabled = true
                }
                createEclipseMetaData = true
            }
            code = {
                encoding = "UTF-8"
                fileHeader = "/*\n * generated by Xtext \${version}\n */"
            }
        }

        // Template from https://www.eclipse.org/Xtext/documentation/302_configuration.html#generator

        language = XtextGeneratorLanguage {
            name = "software.amazon.ionxtext.Ion"
            fileExtensions = "ion"

            fragment = grammarAccess.GrammarAccessFragment2 {}
            fragment = ecore.EMFGeneratorFragment2 {}
            fragment = serializer.SerializerFragment2 {}
            fragment = resourceFactory.ResourceFactoryFragment2 {}
            fragment = parser.antlr.XtextAntlrGeneratorFragment2 {}
//          fragment = validation.ValidatorFragment2 {}
//          fragment = scoping.ImportNamespacesScopingFragment2 {}
//          fragment = exporting.QualifiedNamesFragment2 {}
//          fragment = builder.BuilderIntegrationFragment2 {}
//          fragment = generator.GeneratorFragment2 {}
//          fragment = formatting.Formatter2Fragment2 {}
//          fragment = ui.labeling.LabelProviderFragment2 {}
//          fragment = ui.outline.QuickOutlineFragment2 {}
//          fragment = ui.outline.OutlineTreeProviderFragment2 {}
//          fragment = ui.quickfix.QuickfixProviderFragment2 {}
//          fragment = ui.contentAssist.ContentAssistFragment2 {}
            fragment = junit.Junit4Fragment2 {}
//          fragment = ui.refactoring.RefactorElementNameFragment2 {}
//          fragment = types.TypesGeneratorFragment2 {}
//          fragment = xbase.XtypeGeneratorFragment2 {}
//          fragment = xbase.XbaseGeneratorFragment2 {}
//          fragment = ui.templates.CodetemplatesGeneratorFragment2 {}
//          fragment = ui.compare.CompareFragment2 {}
//          fragment = idea.parser.antlr.XtextAntlrIDEAGeneratorFragment {}
//          fragment = idea.IdeaPluginGenerator {}
//          fragment = web.WebIntegrationFragment {
//              framework = "Ace"
//          }
        }
    }
}
